name: create-tag
on:
  push:
    branches:
      - main
    paths:
      - "version.go"

jobs:
  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Go
        continue-on-error: false
        uses: actions/setup-go@v2
        with:
          go-version: '1.17' # The Go version to download (if necessary) and use.
      - name: Checkout source code
        uses: actions/checkout@v2
        continue-on-error: false
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: Run tests
        continue-on-error: false
        run: |
          echo "$(go version)"
          go test

  cut-tag:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        continue-on-error: false
      - name: Get Version
        continue-on-error: false
        run: |
          echo VERSION=`grep -E "MAJOR|MINOR|PATCH" version.go | cut -d '"' -f 2 | xargs echo -n | tr -s " " "."` >> $GITHUB_ENV
      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/v${{ env.VERSION }}",
              sha: context.sha
            })
